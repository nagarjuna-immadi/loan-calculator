{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/loan-calculator/loan-calculator.component.ts","webpack:///src/app/loan-calculator/loan-calculator.component.html","webpack:///src/app/services/loan-calculator.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","LoanCalculatorComponent","calculator","fb","monthlyInstallment","errorMessage","calculatorForm","group","amount","required","min","max","duration","valueChanges","subscribe","values","getInstallment","value","data","err","get","calculateInstallment","LoanCalculatorService","http","payload","queryParams","fromObject","params","pipe","res","error","status","statusText","providedIn","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n","<header class=\"fixed-top\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <div class=\"row\">\n          <div class=\"col-lg-6\">\n            <h4>Loan Calculator</h4>\n          </div>\n          <div class=\"col-lg-6 text-right\">\n            <a href=\"https://github.com/nagarjuna-immadi/loan-calculator\"\n                target=\"_blank\">GitHub Repo</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</header>\n\n<main role=\"main\" class=\"container\">\n  <app-loan-calculator></app-loan-calculator>\n</main>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoanCalculatorComponent } from './loan-calculator/loan-calculator.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoanCalculatorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Installment } from '../models/installment';\nimport { LoanCalculatorService } from '../services/loan-calculator.service';\n\n@Component({\n  selector: 'app-loan-calculator',\n  templateUrl: './loan-calculator.component.html',\n  styleUrls: ['./loan-calculator.component.scss']\n})\nexport class LoanCalculatorComponent implements OnInit {\n\n  calculatorForm: FormGroup;\n  monthlyInstallment: number = 0;\n  errorMessage: string = '';\n\n  constructor(private calculator: LoanCalculatorService, private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.calculatorForm = this.fb.group({\n      amount: ['', [Validators.required, Validators.min(10000), Validators.max(100000)]],\n      duration: ['', [Validators.required, Validators.min(1), Validators.max(5)]]\n    });\n\n    this.calculatorForm.valueChanges.subscribe(values => {\n      this.monthlyInstallment = 0;\n      this.errorMessage = '';\n    });\n  }\n\n  get amount() {\n    return this.calculatorForm.get('amount');\n  }\n\n  get duration() {\n    return this.calculatorForm.get('duration');\n  }\n\n  calculateInstallment() {\n    this.calculator.getInstallment(this.calculatorForm.value)\n      .subscribe((data: Installment) => {\n        this.monthlyInstallment = data.monthlyInstallment;\n      }, err => {\n        this.errorMessage = `Failed to calculate installment. Please try after some time. Reason: ${err}`;\n      });\n  }\n\n}\n","<form class=\"calculator-form\" [formGroup]=\"calculatorForm\" (ngSubmit)=\"calculateInstallment()\">\n    <div class=\"form-group row\">\n        <label class=\"col-2 col-form-label\">Amount</label>\n        <div class=\"col-6\">\n            <input type=\"number\" class=\"form-control\" formControlName=\"amount\" placeholder=\"10 000 to 100 000\">\n            <div *ngIf=\"amount.invalid && (amount.dirty || amount.touched)\" class=\"alert alert-danger\">\n                <div *ngIf=\"amount.errors.required\">\n                    Please enter amount\n                </div>\n                <div *ngIf=\"amount.errors.min\">\n                    Amount must be at least 10 000\n                </div>\n                <div *ngIf=\"amount.errors.max\">\n                    Amount should not exceed 100 000\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"col-2 col-form-label\">Duration</label>\n        <div class=\"col-6\">\n            <input type=\"number\" class=\"form-control\" formControlName=\"duration\" placeholder=\"1 - 5 years\">\n            <div *ngIf=\"duration.invalid && (duration.dirty || duration.touched)\" class=\"alert alert-danger\">\n                <div *ngIf=\"duration.errors.required\">\n                    Please enter loan duration\n                </div>\n                <div *ngIf=\"duration.errors.min\">\n                    Loan duration must be at least 1 year\n                </div>\n                <div *ngIf=\"duration.errors.max\">\n                    Loan duration should not exceed 5 years\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <div class=\"col-8 text-right submit-buttons\">\n            <button type=\"reset\" class=\"btn btn-primary\">Reset</button>\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"calculatorForm.invalid\">Calculate</button>\n        </div>\n    </div>\n</form>\n\n<div class=\"row\">\n    <div class=\"col-8 jumbotron\" *ngIf=\"!errorMessage\">\n        <p class=\"text-center result\">\n            <span *ngIf=\"monthlyInstallment\">Monthly Installment: <b>{{monthlyInstallment}} EUR</b></span>\n            <span *ngIf=\"calculatorForm.invalid\">Please enter Amount and Duration</span>\n            <span *ngIf=\"calculatorForm.valid && !monthlyInstallment\">Please click Calculate</span>\n        </p>\n    </div>\n    <div class=\"col-8 alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { Installment } from '../models/installment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoanCalculatorService {\n\n  constructor(private http: HttpClient) { }\n\n  getInstallment(payload): Observable<Installment> {\n    let queryParams = new HttpParams({fromObject: payload});\n\n    return this.http.get('assets/mock-data.json', { params: queryParams}).pipe(\n      map(res => res as Installment),\n      catchError((error: HttpErrorResponse) => {\n        return throwError(`${error.status} - ${error.statusText}`);\n      })\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}